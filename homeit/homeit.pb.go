// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: homeit.proto

package homeit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserRole int32

const (
	UserRole_ROLE_USER  UserRole = 0
	UserRole_ROLE_ADMIN UserRole = 1
)

// Enum value maps for UserRole.
var (
	UserRole_name = map[int32]string{
		0: "ROLE_USER",
		1: "ROLE_ADMIN",
	}
	UserRole_value = map[string]int32{
		"ROLE_USER":  0,
		"ROLE_ADMIN": 1,
	}
)

func (x UserRole) Enum() *UserRole {
	p := new(UserRole)
	*p = x
	return p
}

func (x UserRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRole) Descriptor() protoreflect.EnumDescriptor {
	return file_homeit_proto_enumTypes[0].Descriptor()
}

func (UserRole) Type() protoreflect.EnumType {
	return &file_homeit_proto_enumTypes[0]
}

func (x UserRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRole.Descriptor instead.
func (UserRole) EnumDescriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{0}
}

type BillCategory int32

const (
	BillCategory_HOUSE      BillCategory = 0
	BillCategory_WORK       BillCategory = 1
	BillCategory_COMPANY    BillCategory = 2
	BillCategory_OTHER      BillCategory = 3
	BillCategory_ACCOUNT    BillCategory = 4
	BillCategory_ADDITIONAL BillCategory = 5
)

// Enum value maps for BillCategory.
var (
	BillCategory_name = map[int32]string{
		0: "HOUSE",
		1: "WORK",
		2: "COMPANY",
		3: "OTHER",
		4: "ACCOUNT",
		5: "ADDITIONAL",
	}
	BillCategory_value = map[string]int32{
		"HOUSE":      0,
		"WORK":       1,
		"COMPANY":    2,
		"OTHER":      3,
		"ACCOUNT":    4,
		"ADDITIONAL": 5,
	}
)

func (x BillCategory) Enum() *BillCategory {
	p := new(BillCategory)
	*p = x
	return p
}

func (x BillCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BillCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_homeit_proto_enumTypes[1].Descriptor()
}

func (BillCategory) Type() protoreflect.EnumType {
	return &file_homeit_proto_enumTypes[1]
}

func (x BillCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BillCategory.Descriptor instead.
func (BillCategory) EnumDescriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{1}
}

type BillFrequency int32

const (
	BillFrequency_MONTH        BillFrequency = 0
	BillFrequency_TWO_MONTHS   BillFrequency = 1
	BillFrequency_THREE_MONTHS BillFrequency = 2
	BillFrequency_HALF_YEAR    BillFrequency = 3
	BillFrequency_YEAR         BillFrequency = 4
	BillFrequency_NONE         BillFrequency = 5
)

// Enum value maps for BillFrequency.
var (
	BillFrequency_name = map[int32]string{
		0: "MONTH",
		1: "TWO_MONTHS",
		2: "THREE_MONTHS",
		3: "HALF_YEAR",
		4: "YEAR",
		5: "NONE",
	}
	BillFrequency_value = map[string]int32{
		"MONTH":        0,
		"TWO_MONTHS":   1,
		"THREE_MONTHS": 2,
		"HALF_YEAR":    3,
		"YEAR":         4,
		"NONE":         5,
	}
)

func (x BillFrequency) Enum() *BillFrequency {
	p := new(BillFrequency)
	*p = x
	return p
}

func (x BillFrequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BillFrequency) Descriptor() protoreflect.EnumDescriptor {
	return file_homeit_proto_enumTypes[2].Descriptor()
}

func (BillFrequency) Type() protoreflect.EnumType {
	return &file_homeit_proto_enumTypes[2]
}

func (x BillFrequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BillFrequency.Descriptor instead.
func (BillFrequency) EnumDescriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{2}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{0}
}

type UserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UserId) Reset() {
	*x = UserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserId) ProtoMessage() {}

func (x *UserId) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserId.ProtoReflect.Descriptor instead.
func (*UserId) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{1}
}

func (x *UserId) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type TokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *TokenRequest) Reset() {
	*x = TokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenRequest) ProtoMessage() {}

func (x *TokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenRequest.ProtoReflect.Descriptor instead.
func (*TokenRequest) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{2}
}

func (x *TokenRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{3}
}

func (x *LoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Role      string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	Email     string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{4}
}

func (x *Session) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Session) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Session) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Session) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created string `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Updated string `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	Deleted bool   `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Code    string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	Email   string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Expires string `protobuf:"bytes,7,opt,name=expires,proto3" json:"expires,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{5}
}

func (x *Token) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Token) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *Token) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *Token) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *Token) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Token) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Token) GetExpires() string {
	if x != nil {
		return x.Expires
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created   string `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Updated   string `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	Deleted   bool   `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Email     string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Role      string `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
	LastLogin string `protobuf:"bytes,7,opt,name=lastLogin,proto3" json:"lastLogin,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{6}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *User) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *User) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *User) GetLastLogin() string {
	if x != nil {
		return x.LastLogin
	}
	return ""
}

type TargetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId string `protobuf:"bytes,1,opt,name=targetId,proto3" json:"targetId,omitempty"`
}

func (x *TargetId) Reset() {
	*x = TargetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetId) ProtoMessage() {}

func (x *TargetId) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetId.ProtoReflect.Descriptor instead.
func (*TargetId) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{7}
}

func (x *TargetId) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type FileId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId   string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
	TargetId string `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
}

func (x *FileId) Reset() {
	*x = FileId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileId) ProtoMessage() {}

func (x *FileId) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileId.ProtoReflect.Descriptor instead.
func (*FileId) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{8}
}

func (x *FileId) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileId) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created  string `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Updated  string `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	Deleted  bool   `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	TargetId string `protobuf:"bytes,5,opt,name=targetId,proto3" json:"targetId,omitempty"`
	Name     string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Type     string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Data     []byte `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	Url      string `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{9}
}

func (x *File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *File) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *File) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *File) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *File) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *File) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *File) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type BillId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillId string `protobuf:"bytes,1,opt,name=billId,proto3" json:"billId,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *BillId) Reset() {
	*x = BillId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillId) ProtoMessage() {}

func (x *BillId) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillId.ProtoReflect.Descriptor instead.
func (*BillId) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{10}
}

func (x *BillId) GetBillId() string {
	if x != nil {
		return x.BillId
	}
	return ""
}

func (x *BillId) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type PaymentId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId string `protobuf:"bytes,1,opt,name=paymentId,proto3" json:"paymentId,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *PaymentId) Reset() {
	*x = PaymentId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentId) ProtoMessage() {}

func (x *PaymentId) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentId.ProtoReflect.Descriptor instead.
func (*PaymentId) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{11}
}

func (x *PaymentId) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *PaymentId) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Bill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created                   string   `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Updated                   string   `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	Deleted                   bool     `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	UserId                    string   `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	Name                      string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Category                  string   `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	Frequency                 string   `protobuf:"bytes,8,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Income                    *bool    `protobuf:"varint,9,opt,name=income,proto3,oneof" json:"income,omitempty"`
	QrCode                    *bool    `protobuf:"varint,10,opt,name=qrCode,proto3,oneof" json:"qrCode,omitempty"`
	DefaultValue              *float32 `protobuf:"fixed32,11,opt,name=defaultValue,proto3,oneof" json:"defaultValue,omitempty"`
	DefaultAccountNumber      *string  `protobuf:"bytes,12,opt,name=defaultAccountNumber,proto3,oneof" json:"defaultAccountNumber,omitempty"`
	DefaultAccountReciever    *string  `protobuf:"bytes,13,opt,name=defaultAccountReciever,proto3,oneof" json:"defaultAccountReciever,omitempty"`
	DefaultAccountDescription *string  `protobuf:"bytes,14,opt,name=defaultAccountDescription,proto3,oneof" json:"defaultAccountDescription,omitempty"`
	IsPayed                   *bool    `protobuf:"varint,15,opt,name=isPayed,proto3,oneof" json:"isPayed,omitempty"`
}

func (x *Bill) Reset() {
	*x = Bill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bill) ProtoMessage() {}

func (x *Bill) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bill.ProtoReflect.Descriptor instead.
func (*Bill) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{12}
}

func (x *Bill) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Bill) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *Bill) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *Bill) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *Bill) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Bill) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bill) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Bill) GetFrequency() string {
	if x != nil {
		return x.Frequency
	}
	return ""
}

func (x *Bill) GetIncome() bool {
	if x != nil && x.Income != nil {
		return *x.Income
	}
	return false
}

func (x *Bill) GetQrCode() bool {
	if x != nil && x.QrCode != nil {
		return *x.QrCode
	}
	return false
}

func (x *Bill) GetDefaultValue() float32 {
	if x != nil && x.DefaultValue != nil {
		return *x.DefaultValue
	}
	return 0
}

func (x *Bill) GetDefaultAccountNumber() string {
	if x != nil && x.DefaultAccountNumber != nil {
		return *x.DefaultAccountNumber
	}
	return ""
}

func (x *Bill) GetDefaultAccountReciever() string {
	if x != nil && x.DefaultAccountReciever != nil {
		return *x.DefaultAccountReciever
	}
	return ""
}

func (x *Bill) GetDefaultAccountDescription() string {
	if x != nil && x.DefaultAccountDescription != nil {
		return *x.DefaultAccountDescription
	}
	return ""
}

func (x *Bill) GetIsPayed() bool {
	if x != nil && x.IsPayed != nil {
		return *x.IsPayed
	}
	return false
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created            string  `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Updated            string  `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	Deleted            bool    `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	UserId             string  `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	BillId             string  `protobuf:"bytes,6,opt,name=billId,proto3" json:"billId,omitempty"`
	Value              float32 `protobuf:"fixed32,7,opt,name=value,proto3" json:"value,omitempty"`
	Date               string  `protobuf:"bytes,8,opt,name=date,proto3" json:"date,omitempty"`
	AccountNumber      *string `protobuf:"bytes,9,opt,name=accountNumber,proto3,oneof" json:"accountNumber,omitempty"`
	AccountReciever    *string `protobuf:"bytes,10,opt,name=accountReciever,proto3,oneof" json:"accountReciever,omitempty"`
	AccountDescription *string `protobuf:"bytes,11,opt,name=accountDescription,proto3,oneof" json:"accountDescription,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{13}
}

func (x *Payment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Payment) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *Payment) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *Payment) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *Payment) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Payment) GetBillId() string {
	if x != nil {
		return x.BillId
	}
	return ""
}

func (x *Payment) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Payment) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Payment) GetAccountNumber() string {
	if x != nil && x.AccountNumber != nil {
		return *x.AccountNumber
	}
	return ""
}

func (x *Payment) GetAccountReciever() string {
	if x != nil && x.AccountReciever != nil {
		return *x.AccountReciever
	}
	return ""
}

func (x *Payment) GetAccountDescription() string {
	if x != nil && x.AccountDescription != nil {
		return *x.AccountDescription
	}
	return ""
}

type Saving struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillId        string   `protobuf:"bytes,1,opt,name=billId,proto3" json:"billId,omitempty"`
	BillCategory  string   `protobuf:"bytes,2,opt,name=billCategory,proto3" json:"billCategory,omitempty"`
	BillName      string   `protobuf:"bytes,3,opt,name=billName,proto3" json:"billName,omitempty"`
	BillIncome    *bool    `protobuf:"varint,4,opt,name=billIncome,proto3,oneof" json:"billIncome,omitempty"`
	PreviousMonth *float32 `protobuf:"fixed32,5,opt,name=previousMonth,proto3,oneof" json:"previousMonth,omitempty"`
	CurrentMonth  *float32 `protobuf:"fixed32,6,opt,name=currentMonth,proto3,oneof" json:"currentMonth,omitempty"`
}

func (x *Saving) Reset() {
	*x = Saving{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Saving) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Saving) ProtoMessage() {}

func (x *Saving) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Saving.ProtoReflect.Descriptor instead.
func (*Saving) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{14}
}

func (x *Saving) GetBillId() string {
	if x != nil {
		return x.BillId
	}
	return ""
}

func (x *Saving) GetBillCategory() string {
	if x != nil {
		return x.BillCategory
	}
	return ""
}

func (x *Saving) GetBillName() string {
	if x != nil {
		return x.BillName
	}
	return ""
}

func (x *Saving) GetBillIncome() bool {
	if x != nil && x.BillIncome != nil {
		return *x.BillIncome
	}
	return false
}

func (x *Saving) GetPreviousMonth() float32 {
	if x != nil && x.PreviousMonth != nil {
		return *x.PreviousMonth
	}
	return 0
}

func (x *Saving) GetCurrentMonth() float32 {
	if x != nil && x.CurrentMonth != nil {
		return *x.CurrentMonth
	}
	return 0
}

type SupplyId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SupplyId string `protobuf:"bytes,1,opt,name=supplyId,proto3" json:"supplyId,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *SupplyId) Reset() {
	*x = SupplyId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupplyId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplyId) ProtoMessage() {}

func (x *SupplyId) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplyId.ProtoReflect.Descriptor instead.
func (*SupplyId) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{15}
}

func (x *SupplyId) GetSupplyId() string {
	if x != nil {
		return x.SupplyId
	}
	return ""
}

func (x *SupplyId) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Supply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created  string `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Updated  string `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	Deleted  bool   `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	UserId   string `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	Name     string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Category string `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	Amount   int32  `protobuf:"varint,8,opt,name=amount,proto3" json:"amount,omitempty"`
	Priority int32  `protobuf:"varint,9,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *Supply) Reset() {
	*x = Supply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Supply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Supply) ProtoMessage() {}

func (x *Supply) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Supply.ProtoReflect.Descriptor instead.
func (*Supply) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{16}
}

func (x *Supply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Supply) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *Supply) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *Supply) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *Supply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Supply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Supply) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Supply) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Supply) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type TariffId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	TariffId string `protobuf:"bytes,2,opt,name=tariffId,proto3" json:"tariffId,omitempty"`
}

func (x *TariffId) Reset() {
	*x = TariffId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TariffId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TariffId) ProtoMessage() {}

func (x *TariffId) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TariffId.ProtoReflect.Descriptor instead.
func (*TariffId) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{17}
}

func (x *TariffId) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TariffId) GetTariffId() string {
	if x != nil {
		return x.TariffId
	}
	return ""
}

type MeterId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	MeterId string `protobuf:"bytes,2,opt,name=meterId,proto3" json:"meterId,omitempty"`
}

func (x *MeterId) Reset() {
	*x = MeterId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeterId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeterId) ProtoMessage() {}

func (x *MeterId) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeterId.ProtoReflect.Descriptor instead.
func (*MeterId) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{18}
}

func (x *MeterId) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MeterId) GetMeterId() string {
	if x != nil {
		return x.MeterId
	}
	return ""
}

type MeasurementId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	MeasurementId string `protobuf:"bytes,2,opt,name=measurementId,proto3" json:"measurementId,omitempty"`
}

func (x *MeasurementId) Reset() {
	*x = MeasurementId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementId) ProtoMessage() {}

func (x *MeasurementId) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementId.ProtoReflect.Descriptor instead.
func (*MeasurementId) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{19}
}

func (x *MeasurementId) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MeasurementId) GetMeasurementId() string {
	if x != nil {
		return x.MeasurementId
	}
	return ""
}

type Tariff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created        string          `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Updated        string          `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	Deleted        *string         `protobuf:"bytes,4,opt,name=deleted,proto3,oneof" json:"deleted,omitempty"`
	UserId         *string         `protobuf:"bytes,5,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	Global         bool            `protobuf:"varint,6,opt,name=global,proto3" json:"global,omitempty"`
	Name           string          `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Sectors        []*TariffSector `protobuf:"bytes,8,rep,name=sectors,proto3" json:"sectors,omitempty"`
	PricesPerKwh   []*TariffPrice  `protobuf:"bytes,9,rep,name=pricesPerKwh,proto3" json:"pricesPerKwh,omitempty"`
	PricesPerMonth []*TariffPrice  `protobuf:"bytes,10,rep,name=pricesPerMonth,proto3" json:"pricesPerMonth,omitempty"`
}

func (x *Tariff) Reset() {
	*x = Tariff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tariff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tariff) ProtoMessage() {}

func (x *Tariff) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tariff.ProtoReflect.Descriptor instead.
func (*Tariff) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{20}
}

func (x *Tariff) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Tariff) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *Tariff) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *Tariff) GetDeleted() string {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return ""
}

func (x *Tariff) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *Tariff) GetGlobal() bool {
	if x != nil {
		return x.Global
	}
	return false
}

func (x *Tariff) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tariff) GetSectors() []*TariffSector {
	if x != nil {
		return x.Sectors
	}
	return nil
}

func (x *Tariff) GetPricesPerKwh() []*TariffPrice {
	if x != nil {
		return x.PricesPerKwh
	}
	return nil
}

func (x *Tariff) GetPricesPerMonth() []*TariffPrice {
	if x != nil {
		return x.PricesPerMonth
	}
	return nil
}

type TariffSector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Weekends      bool     `protobuf:"varint,2,opt,name=weekends,proto3" json:"weekends,omitempty"`
	StablePrice   float32  `protobuf:"fixed32,3,opt,name=stablePrice,proto3" json:"stablePrice,omitempty"`
	VariablePrice float32  `protobuf:"fixed32,4,opt,name=variablePrice,proto3" json:"variablePrice,omitempty"`
	TimeSector    []string `protobuf:"bytes,5,rep,name=timeSector,proto3" json:"timeSector,omitempty"`
}

func (x *TariffSector) Reset() {
	*x = TariffSector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TariffSector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TariffSector) ProtoMessage() {}

func (x *TariffSector) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TariffSector.ProtoReflect.Descriptor instead.
func (*TariffSector) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{21}
}

func (x *TariffSector) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TariffSector) GetWeekends() bool {
	if x != nil {
		return x.Weekends
	}
	return false
}

func (x *TariffSector) GetStablePrice() float32 {
	if x != nil {
		return x.StablePrice
	}
	return 0
}

func (x *TariffSector) GetVariablePrice() float32 {
	if x != nil {
		return x.VariablePrice
	}
	return 0
}

func (x *TariffSector) GetTimeSector() []string {
	if x != nil {
		return x.TimeSector
	}
	return nil
}

type TariffPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Price float32 `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *TariffPrice) Reset() {
	*x = TariffPrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TariffPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TariffPrice) ProtoMessage() {}

func (x *TariffPrice) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TariffPrice.ProtoReflect.Descriptor instead.
func (*TariffPrice) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{22}
}

func (x *TariffPrice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TariffPrice) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type Meter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created string  `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Updated string  `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	Deleted *string `protobuf:"bytes,4,opt,name=deleted,proto3,oneof" json:"deleted,omitempty"`
	UserId  string  `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	Name    string  `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Meter) Reset() {
	*x = Meter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meter) ProtoMessage() {}

func (x *Meter) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meter.ProtoReflect.Descriptor instead.
func (*Meter) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{23}
}

func (x *Meter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Meter) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *Meter) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *Meter) GetDeleted() string {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return ""
}

func (x *Meter) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Meter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Measurement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created string  `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Updated string  `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	Deleted *string `protobuf:"bytes,4,opt,name=deleted,proto3,oneof" json:"deleted,omitempty"`
	UserId  string  `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	MeterId string  `protobuf:"bytes,6,opt,name=meterId,proto3" json:"meterId,omitempty"`
	Value   float32 `protobuf:"fixed32,7,opt,name=value,proto3" json:"value,omitempty"`
	Date    string  `protobuf:"bytes,8,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *Measurement) Reset() {
	*x = Measurement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Measurement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Measurement) ProtoMessage() {}

func (x *Measurement) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Measurement.ProtoReflect.Descriptor instead.
func (*Measurement) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{24}
}

func (x *Measurement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Measurement) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *Measurement) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *Measurement) GetDeleted() string {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return ""
}

func (x *Measurement) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Measurement) GetMeterId() string {
	if x != nil {
		return x.MeterId
	}
	return ""
}

func (x *Measurement) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Measurement) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

var File_homeit_proto protoreflect.FileDescriptor

var file_homeit_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x24, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x38, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x69, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xa9, 0x01, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x26, 0x0a, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22,
	0x3c, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0xce, 0x01,
	0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x38,
	0x0a, 0x06, 0x42, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8a, 0x05, 0x0a, 0x04,
	0x42, 0x69, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1b, 0x0a, 0x06, 0x69, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x06, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x14, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x14, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x72, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x41, 0x0a, 0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x69, 0x73, 0x50, 0x61, 0x79, 0x65, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x07, 0x69, 0x73, 0x50, 0x61, 0x79, 0x65, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x72, 0x42, 0x1c,
	0x0a, 0x1a, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x69, 0x73, 0x50, 0x61, 0x79, 0x65, 0x64, 0x22, 0x8d, 0x03, 0x0a, 0x07, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69,
	0x6c, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x69, 0x65,
	0x76, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65,
	0x72, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8b, 0x02, 0x0a, 0x06, 0x53, 0x61, 0x76,
	0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62,
	0x69, 0x6c, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x69, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x69, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0a, 0x62,
	0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x29, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x02, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x74,
	0x68, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x22, 0x3e, 0x0a, 0x08, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x06, 0x53, 0x75, 0x70, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x3e, 0x0a, 0x08, 0x54,
	0x61, 0x72, 0x69, 0x66, 0x66, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x07, 0x4d,
	0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x0d, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xf1, 0x02, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x69,
	0x66, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x53,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x37,
	0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x4b, 0x77, 0x68, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x54, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x73, 0x50, 0x65, 0x72, 0x4b, 0x77, 0x68, 0x12, 0x3b, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x73, 0x50, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x0c,
	0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x77, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x77, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x22, 0x37, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xa2, 0x01,
	0x0a, 0x05, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x22, 0xd8, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x2a, 0x29, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x4f, 0x4c,
	0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x4f, 0x4c, 0x45,
	0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x2a, 0x58, 0x0a, 0x0c, 0x42, 0x69, 0x6c, 0x6c,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x4f, 0x55, 0x53,
	0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54,
	0x48, 0x45, 0x52, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x44, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c,
	0x10, 0x05, 0x2a, 0x5f, 0x0a, 0x0d, 0x42, 0x69, 0x6c, 0x6c, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x54, 0x57, 0x4f, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x53, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x54, 0x48, 0x52, 0x45, 0x45, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x53, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x48, 0x41, 0x4c, 0x46, 0x5f, 0x59, 0x45, 0x41, 0x52, 0x10, 0x03, 0x12,
	0x08, 0x0a, 0x04, 0x59, 0x45, 0x41, 0x52, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x05, 0x32, 0xd3, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x14, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x68, 0x6f, 0x6d, 0x65,
	0x69, 0x74, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x05, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x14, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x68, 0x6f, 0x6d, 0x65,
	0x69, 0x74, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0c, 0x2e, 0x68, 0x6f, 0x6d,
	0x65, 0x69, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x0c, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69,
	0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x2b, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x0d, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69,
	0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x30, 0x01, 0x32, 0x98, 0x01, 0x0a, 0x0c, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x10, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x0c, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x2a, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0c, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x0c, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x1a, 0x0c, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x22, 0x00, 0x32, 0x9f, 0x03, 0x0a, 0x0b, 0x42, 0x69, 0x6c, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x73,
	0x12, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x1a, 0x0c, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x2a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6c, 0x6c,
	0x12, 0x0c, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x1a, 0x0c,
	0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x22, 0x00, 0x12, 0x2c,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x12, 0x0e, 0x2e, 0x68,
	0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x1a, 0x0c, 0x2e, 0x68,
	0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x2e, 0x68, 0x6f,
	0x6d, 0x65, 0x69, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0f, 0x2e, 0x68, 0x6f,
	0x6d, 0x65, 0x69, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x36, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x42, 0x69, 0x6c,
	0x6c, 0x49, 0x64, 0x1a, 0x0f, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x33, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x2e, 0x68, 0x6f, 0x6d, 0x65,
	0x69, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0f, 0x2e, 0x68, 0x6f, 0x6d,
	0x65, 0x69, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x35, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x11,
	0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x1a, 0x0f, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x61, 0x76, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x53, 0x61, 0x76, 0x69,
	0x6e, 0x67, 0x22, 0x00, 0x30, 0x01, 0x32, 0xa6, 0x01, 0x0a, 0x0b, 0x46, 0x6f, 0x6f, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x30, 0x0a, 0x0c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65,
	0x69, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x1a, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65,
	0x69, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x2e, 0x68, 0x6f,
	0x6d, 0x65, 0x69, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x1a, 0x0e, 0x2e,
	0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32,
	0xa9, 0x04, 0x0a, 0x0d, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x30, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x12,
	0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a,
	0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x12, 0x10, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x69,
	0x66, 0x66, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x12, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x54, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x1a, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x54, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x12, 0x10, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e,
	0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69,
	0x74, 0x2e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74,
	0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x00, 0x30, 0x01, 0x12, 0x2d, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x68, 0x6f, 0x6d, 0x65,
	0x69, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69,
	0x74, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69,
	0x74, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x68, 0x6f, 0x6d, 0x65,
	0x69, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0f, 0x2e,
	0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x13,
	0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x68,
	0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x1a, 0x13, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x2e,
	0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x42, 0x4a, 0x0a, 0x14, 0x69,
	0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x0b, 0x48, 0x6f, 0x6d, 0x65, 0x49, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x70, 0x69, 0x6f, 0x72, 0x6f, 0x77, 0x73, 0x6b, 0x69, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67,
	0x2f, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_homeit_proto_rawDescOnce sync.Once
	file_homeit_proto_rawDescData = file_homeit_proto_rawDesc
)

func file_homeit_proto_rawDescGZIP() []byte {
	file_homeit_proto_rawDescOnce.Do(func() {
		file_homeit_proto_rawDescData = protoimpl.X.CompressGZIP(file_homeit_proto_rawDescData)
	})
	return file_homeit_proto_rawDescData
}

var file_homeit_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_homeit_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_homeit_proto_goTypes = []interface{}{
	(UserRole)(0),         // 0: homeit.UserRole
	(BillCategory)(0),     // 1: homeit.BillCategory
	(BillFrequency)(0),    // 2: homeit.BillFrequency
	(*Empty)(nil),         // 3: homeit.Empty
	(*UserId)(nil),        // 4: homeit.UserId
	(*TokenRequest)(nil),  // 5: homeit.TokenRequest
	(*LoginRequest)(nil),  // 6: homeit.LoginRequest
	(*Session)(nil),       // 7: homeit.Session
	(*Token)(nil),         // 8: homeit.Token
	(*User)(nil),          // 9: homeit.User
	(*TargetId)(nil),      // 10: homeit.TargetId
	(*FileId)(nil),        // 11: homeit.FileId
	(*File)(nil),          // 12: homeit.File
	(*BillId)(nil),        // 13: homeit.BillId
	(*PaymentId)(nil),     // 14: homeit.PaymentId
	(*Bill)(nil),          // 15: homeit.Bill
	(*Payment)(nil),       // 16: homeit.Payment
	(*Saving)(nil),        // 17: homeit.Saving
	(*SupplyId)(nil),      // 18: homeit.SupplyId
	(*Supply)(nil),        // 19: homeit.Supply
	(*TariffId)(nil),      // 20: homeit.TariffId
	(*MeterId)(nil),       // 21: homeit.MeterId
	(*MeasurementId)(nil), // 22: homeit.MeasurementId
	(*Tariff)(nil),        // 23: homeit.Tariff
	(*TariffSector)(nil),  // 24: homeit.TariffSector
	(*TariffPrice)(nil),   // 25: homeit.TariffPrice
	(*Meter)(nil),         // 26: homeit.Meter
	(*Measurement)(nil),   // 27: homeit.Measurement
}
var file_homeit_proto_depIdxs = []int32{
	24, // 0: homeit.Tariff.sectors:type_name -> homeit.TariffSector
	25, // 1: homeit.Tariff.pricesPerKwh:type_name -> homeit.TariffPrice
	25, // 2: homeit.Tariff.pricesPerMonth:type_name -> homeit.TariffPrice
	5,  // 3: homeit.UsersService.CreateToken:input_type -> homeit.TokenRequest
	6,  // 4: homeit.UsersService.Login:input_type -> homeit.LoginRequest
	9,  // 5: homeit.UsersService.CreateUser:input_type -> homeit.User
	3,  // 6: homeit.UsersService.GetUsers:input_type -> homeit.Empty
	10, // 7: homeit.FilesService.GetFiles:input_type -> homeit.TargetId
	12, // 8: homeit.FilesService.CreateFile:input_type -> homeit.File
	11, // 9: homeit.FilesService.DeleteFile:input_type -> homeit.FileId
	4,  // 10: homeit.BillService.GetBills:input_type -> homeit.UserId
	15, // 11: homeit.BillService.CreateBill:input_type -> homeit.Bill
	13, // 12: homeit.BillService.DeleteBill:input_type -> homeit.BillId
	4,  // 13: homeit.BillService.GetPayments:input_type -> homeit.UserId
	13, // 14: homeit.BillService.GetBillPayments:input_type -> homeit.BillId
	16, // 15: homeit.BillService.CreatePayment:input_type -> homeit.Payment
	14, // 16: homeit.BillService.DeletePayment:input_type -> homeit.PaymentId
	4,  // 17: homeit.BillService.GetSavings:input_type -> homeit.UserId
	4,  // 18: homeit.FoodService.GetSupplies:input_type -> homeit.UserId
	19, // 19: homeit.FoodService.CreateSupply:input_type -> homeit.Supply
	18, // 20: homeit.FoodService.DeleteSupply:input_type -> homeit.SupplyId
	4,  // 21: homeit.EnergyService.GetTariffs:input_type -> homeit.UserId
	20, // 22: homeit.EnergyService.GetTariff:input_type -> homeit.TariffId
	23, // 23: homeit.EnergyService.CreateTariff:input_type -> homeit.Tariff
	20, // 24: homeit.EnergyService.DeleteTariff:input_type -> homeit.TariffId
	4,  // 25: homeit.EnergyService.GetMeters:input_type -> homeit.UserId
	26, // 26: homeit.EnergyService.CreateMeter:input_type -> homeit.Meter
	21, // 27: homeit.EnergyService.DeleteMeter:input_type -> homeit.MeterId
	21, // 28: homeit.EnergyService.GetMeasurements:input_type -> homeit.MeterId
	27, // 29: homeit.EnergyService.CreateMeasurement:input_type -> homeit.Measurement
	22, // 30: homeit.EnergyService.DeleteMeasurement:input_type -> homeit.MeasurementId
	8,  // 31: homeit.UsersService.CreateToken:output_type -> homeit.Token
	7,  // 32: homeit.UsersService.Login:output_type -> homeit.Session
	9,  // 33: homeit.UsersService.CreateUser:output_type -> homeit.User
	9,  // 34: homeit.UsersService.GetUsers:output_type -> homeit.User
	12, // 35: homeit.FilesService.GetFiles:output_type -> homeit.File
	12, // 36: homeit.FilesService.CreateFile:output_type -> homeit.File
	12, // 37: homeit.FilesService.DeleteFile:output_type -> homeit.File
	15, // 38: homeit.BillService.GetBills:output_type -> homeit.Bill
	15, // 39: homeit.BillService.CreateBill:output_type -> homeit.Bill
	15, // 40: homeit.BillService.DeleteBill:output_type -> homeit.Bill
	16, // 41: homeit.BillService.GetPayments:output_type -> homeit.Payment
	16, // 42: homeit.BillService.GetBillPayments:output_type -> homeit.Payment
	16, // 43: homeit.BillService.CreatePayment:output_type -> homeit.Payment
	16, // 44: homeit.BillService.DeletePayment:output_type -> homeit.Payment
	17, // 45: homeit.BillService.GetSavings:output_type -> homeit.Saving
	19, // 46: homeit.FoodService.GetSupplies:output_type -> homeit.Supply
	19, // 47: homeit.FoodService.CreateSupply:output_type -> homeit.Supply
	19, // 48: homeit.FoodService.DeleteSupply:output_type -> homeit.Supply
	23, // 49: homeit.EnergyService.GetTariffs:output_type -> homeit.Tariff
	23, // 50: homeit.EnergyService.GetTariff:output_type -> homeit.Tariff
	23, // 51: homeit.EnergyService.CreateTariff:output_type -> homeit.Tariff
	23, // 52: homeit.EnergyService.DeleteTariff:output_type -> homeit.Tariff
	26, // 53: homeit.EnergyService.GetMeters:output_type -> homeit.Meter
	26, // 54: homeit.EnergyService.CreateMeter:output_type -> homeit.Meter
	26, // 55: homeit.EnergyService.DeleteMeter:output_type -> homeit.Meter
	27, // 56: homeit.EnergyService.GetMeasurements:output_type -> homeit.Measurement
	27, // 57: homeit.EnergyService.CreateMeasurement:output_type -> homeit.Measurement
	27, // 58: homeit.EnergyService.DeleteMeasurement:output_type -> homeit.Measurement
	31, // [31:59] is the sub-list for method output_type
	3,  // [3:31] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_homeit_proto_init() }
func file_homeit_proto_init() {
	if File_homeit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_homeit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Saving); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupplyId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Supply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TariffId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeterId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tariff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TariffSector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TariffPrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Measurement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_homeit_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_homeit_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_homeit_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_homeit_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_homeit_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_homeit_proto_msgTypes[24].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_homeit_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_homeit_proto_goTypes,
		DependencyIndexes: file_homeit_proto_depIdxs,
		EnumInfos:         file_homeit_proto_enumTypes,
		MessageInfos:      file_homeit_proto_msgTypes,
	}.Build()
	File_homeit_proto = out.File
	file_homeit_proto_rawDesc = nil
	file_homeit_proto_goTypes = nil
	file_homeit_proto_depIdxs = nil
}
