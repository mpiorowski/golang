// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: homeit.proto

package homeit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{0}
}

type UserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserId) Reset() {
	*x = UserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserId) ProtoMessage() {}

func (x *UserId) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserId.ProtoReflect.Descriptor instead.
func (*UserId) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{1}
}

func (x *UserId) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type TargetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId string `protobuf:"bytes,1,opt,name=targetId,proto3" json:"targetId,omitempty"`
}

func (x *TargetId) Reset() {
	*x = TargetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetId) ProtoMessage() {}

func (x *TargetId) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetId.ProtoReflect.Descriptor instead.
func (*TargetId) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{2}
}

func (x *TargetId) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type FileId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId   string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
	TargetId string `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
}

func (x *FileId) Reset() {
	*x = FileId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileId) ProtoMessage() {}

func (x *FileId) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileId.ProtoReflect.Descriptor instead.
func (*FileId) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{3}
}

func (x *FileId) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileId) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created  string `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Updated  string `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	Deleted  bool   `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	TargetId string `protobuf:"bytes,5,opt,name=targetId,proto3" json:"targetId,omitempty"`
	Name     string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Type     string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Data     []byte `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	Url      string `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{4}
}

func (x *File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *File) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *File) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *File) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *File) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *File) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *File) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirebaseUid string `protobuf:"bytes,1,opt,name=firebaseUid,proto3" json:"firebaseUid,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserRequest) GetFirebaseUid() string {
	if x != nil {
		return x.FirebaseUid
	}
	return ""
}

type GetUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type MenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Days   []string `protobuf:"bytes,2,rep,name=days,proto3" json:"days,omitempty"`
}

func (x *MenuRequest) Reset() {
	*x = MenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuRequest) ProtoMessage() {}

func (x *MenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuRequest.ProtoReflect.Descriptor instead.
func (*MenuRequest) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{7}
}

func (x *MenuRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MenuRequest) GetDays() []string {
	if x != nil {
		return x.Days
	}
	return nil
}

type CopyMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId *MenuId  `protobuf:"bytes,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
	Days   []string `protobuf:"bytes,2,rep,name=days,proto3" json:"days,omitempty"`
}

func (x *CopyMenuRequest) Reset() {
	*x = CopyMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyMenuRequest) ProtoMessage() {}

func (x *CopyMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyMenuRequest.ProtoReflect.Descriptor instead.
func (*CopyMenuRequest) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{8}
}

func (x *CopyMenuRequest) GetMenuId() *MenuId {
	if x != nil {
		return x.MenuId
	}
	return nil
}

func (x *CopyMenuRequest) GetDays() []string {
	if x != nil {
		return x.Days
	}
	return nil
}

type CopyMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menu *Menu `protobuf:"bytes,1,opt,name=menu,proto3" json:"menu,omitempty"`
}

func (x *CopyMenuResponse) Reset() {
	*x = CopyMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_homeit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyMenuResponse) ProtoMessage() {}

func (x *CopyMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_homeit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyMenuResponse.ProtoReflect.Descriptor instead.
func (*CopyMenuResponse) Descriptor() ([]byte, []int) {
	return file_homeit_proto_rawDescGZIP(), []int{9}
}

func (x *CopyMenuResponse) GetMenu() *Menu {
	if x != nil {
		return x.Menu
	}
	return nil
}

var File_homeit_proto protoreflect.FileDescriptor

var file_homeit_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x1a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0a, 0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x65, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x21, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x3c,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0xce, 0x01, 0x0a,
	0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x32, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x55, 0x69,
	0x64, 0x22, 0x32, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x39, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73,
	0x22, 0x4b, 0x0a, 0x0f, 0x43, 0x6f, 0x70, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49,
	0x64, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x32, 0x0a,
	0x10, 0x43, 0x6f, 0x70, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x6d, 0x65, 0x6e,
	0x75, 0x32, 0x8a, 0x02, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x0d, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x3c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x2e,
	0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x2c, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x0b, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x32, 0x98,
	0x01, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x2e, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x10, 0x2e, 0x68, 0x6f,
	0x6d, 0x65, 0x69, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x0c, 0x2e,
	0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x2a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0c, 0x2e,
	0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x0c, 0x2e, 0x68, 0x6f,
	0x6d, 0x65, 0x69, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65,
	0x69, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x0c, 0x2e, 0x68, 0x6f, 0x6d, 0x65,
	0x69, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x32, 0x92, 0x03, 0x0a, 0x0b, 0x42, 0x69,
	0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x42, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0b, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x2e, 0x42, 0x69,
	0x6c, 0x6c, 0x22, 0x00, 0x30, 0x01, 0x12, 0x28, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x69, 0x6c, 0x6c, 0x12, 0x0b, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x2e, 0x42, 0x69, 0x6c,
	0x6c, 0x1a, 0x0b, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x22, 0x00,
	0x12, 0x2a, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x12, 0x0d,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x1a, 0x0b, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x73, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x2e, 0x68, 0x6f,
	0x6d, 0x65, 0x69, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x34, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x0d, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x49,
	0x64, 0x1a, 0x0e, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x31, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0e, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x2f, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0e, 0x2e, 0x68, 0x6f,
	0x6d, 0x65, 0x69, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x73, 0x2e, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x30, 0x01, 0x32, 0x9c,
	0x05, 0x0a, 0x0b, 0x46, 0x6f, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x2e,
	0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0c, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x2c, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12,
	0x0c, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x1a, 0x0c, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x2e, 0x0a,
	0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x1a, 0x0c, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x68, 0x6f, 0x6d, 0x65,
	0x69, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x22, 0x00, 0x30, 0x01, 0x12, 0x26,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x0a, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x1a, 0x0a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x2e,
	0x4d, 0x65, 0x6e, 0x75, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x08, 0x43, 0x6f, 0x70, 0x79, 0x4d, 0x65,
	0x6e, 0x75, 0x12, 0x17, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x43, 0x6f, 0x70, 0x79,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x68, 0x6f,
	0x6d, 0x65, 0x69, 0x74, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x0c, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x4d, 0x65, 0x6e,
	0x75, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x22,
	0x00, 0x12, 0x2e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x12,
	0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a,
	0x0c, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x2c, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x12, 0x0c, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x1a,
	0x0c, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x22, 0x00, 0x12,
	0x2e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12,
	0x0e, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x49, 0x64, 0x1a,
	0x0c, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x22, 0x00, 0x12,
	0x36, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x1a, 0x10, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x38, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x10, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x2e, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x10, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x32, 0x98, 0x03,
	0x0a, 0x0d, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x30, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x12, 0x0e, 0x2e,
	0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0e, 0x2e,
	0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x2e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x12, 0x10,
	0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x2e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x49, 0x64,
	0x1a, 0x0e, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x2e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x22, 0x00, 0x12, 0x30, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x69,
	0x66, 0x66, 0x12, 0x0e, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x2e, 0x54, 0x61, 0x72, 0x69,
	0x66, 0x66, 0x1a, 0x0e, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x2e, 0x54, 0x61, 0x72, 0x69,
	0x66, 0x66, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x12, 0x10, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x2e, 0x54, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x2e,
	0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x0e, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x2e, 0x4d,
	0x65, 0x74, 0x65, 0x72, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0f, 0x2e, 0x65, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x65,
	0x6e, 0x65, 0x72, 0x67, 0x79, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x51, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x65, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x2e,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x4a, 0x0a, 0x14, 0x69, 0x6f, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x0b, 0x48, 0x6f, 0x6d, 0x65, 0x49, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x70, 0x69, 0x6f,
	0x72, 0x6f, 0x77, 0x73, 0x6b, 0x69, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x68, 0x6f,
	0x6d, 0x65, 0x69, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_homeit_proto_rawDescOnce sync.Once
	file_homeit_proto_rawDescData = file_homeit_proto_rawDesc
)

func file_homeit_proto_rawDescGZIP() []byte {
	file_homeit_proto_rawDescOnce.Do(func() {
		file_homeit_proto_rawDescData = protoimpl.X.CompressGZIP(file_homeit_proto_rawDescData)
	})
	return file_homeit_proto_rawDescData
}

var file_homeit_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_homeit_proto_goTypes = []interface{}{
	(*Empty)(nil),                // 0: homeit.Empty
	(*UserId)(nil),               // 1: homeit.UserId
	(*TargetId)(nil),             // 2: homeit.TargetId
	(*FileId)(nil),               // 3: homeit.FileId
	(*File)(nil),                 // 4: homeit.File
	(*GetUserRequest)(nil),       // 5: homeit.GetUserRequest
	(*GetUserResponse)(nil),      // 6: homeit.GetUserResponse
	(*MenuRequest)(nil),          // 7: homeit.MenuRequest
	(*CopyMenuRequest)(nil),      // 8: homeit.CopyMenuRequest
	(*CopyMenuResponse)(nil),     // 9: homeit.CopyMenuResponse
	(*User)(nil),                 // 10: users.User
	(*MenuId)(nil),               // 11: food.MenuId
	(*Menu)(nil),                 // 12: food.Menu
	(*TokenRequest)(nil),         // 13: users.TokenRequest
	(*LoginRequest)(nil),         // 14: users.LoginRequest
	(*Bill)(nil),                 // 15: bills.Bill
	(*BillId)(nil),               // 16: bills.BillId
	(*Payment)(nil),              // 17: bills.Payment
	(*PaymentId)(nil),            // 18: bills.PaymentId
	(*Supply)(nil),               // 19: food.Supply
	(*SupplyId)(nil),             // 20: food.SupplyId
	(*Recipe)(nil),               // 21: food.Recipe
	(*RecipeId)(nil),             // 22: food.RecipeId
	(*Ingredient)(nil),           // 23: food.Ingredient
	(*IngredientId)(nil),         // 24: food.IngredientId
	(*TariffId)(nil),             // 25: energy.TariffId
	(*Tariff)(nil),               // 26: energy.Tariff
	(*MeterId)(nil),              // 27: energy.MeterId
	(*EnergySectorRequest)(nil),  // 28: energy.EnergySectorRequest
	(*Token)(nil),                // 29: users.Token
	(*Session)(nil),              // 30: users.Session
	(*Saving)(nil),               // 31: bills.Saving
	(*Meter)(nil),                // 32: energy.Meter
	(*Measurement)(nil),          // 33: energy.Measurement
	(*EnergySectorResponse)(nil), // 34: energy.EnergySectorResponse
}
var file_homeit_proto_depIdxs = []int32{
	10, // 0: homeit.GetUserResponse.user:type_name -> users.User
	11, // 1: homeit.CopyMenuRequest.menuId:type_name -> food.MenuId
	12, // 2: homeit.CopyMenuResponse.menu:type_name -> food.Menu
	13, // 3: homeit.UsersService.CreateToken:input_type -> users.TokenRequest
	14, // 4: homeit.UsersService.Login:input_type -> users.LoginRequest
	0,  // 5: homeit.UsersService.GetUsers:input_type -> homeit.Empty
	5,  // 6: homeit.UsersService.GetUser:input_type -> homeit.GetUserRequest
	10, // 7: homeit.UsersService.CreateUser:input_type -> users.User
	2,  // 8: homeit.FilesService.GetFiles:input_type -> homeit.TargetId
	4,  // 9: homeit.FilesService.CreateFile:input_type -> homeit.File
	3,  // 10: homeit.FilesService.DeleteFile:input_type -> homeit.FileId
	1,  // 11: homeit.BillService.GetBills:input_type -> homeit.UserId
	15, // 12: homeit.BillService.CreateBill:input_type -> bills.Bill
	16, // 13: homeit.BillService.DeleteBill:input_type -> bills.BillId
	1,  // 14: homeit.BillService.GetPayments:input_type -> homeit.UserId
	16, // 15: homeit.BillService.GetBillPayments:input_type -> bills.BillId
	17, // 16: homeit.BillService.CreatePayment:input_type -> bills.Payment
	18, // 17: homeit.BillService.DeletePayment:input_type -> bills.PaymentId
	1,  // 18: homeit.BillService.GetSavings:input_type -> homeit.UserId
	1,  // 19: homeit.FoodService.GetSupplies:input_type -> homeit.UserId
	19, // 20: homeit.FoodService.CreateSupply:input_type -> food.Supply
	20, // 21: homeit.FoodService.DeleteSupply:input_type -> food.SupplyId
	7,  // 22: homeit.FoodService.GetMenus:input_type -> homeit.MenuRequest
	12, // 23: homeit.FoodService.CreateMenu:input_type -> food.Menu
	8,  // 24: homeit.FoodService.CopyMenu:input_type -> homeit.CopyMenuRequest
	11, // 25: homeit.FoodService.DeleteMenu:input_type -> food.MenuId
	1,  // 26: homeit.FoodService.GetRecipes:input_type -> homeit.UserId
	21, // 27: homeit.FoodService.CreateRecipe:input_type -> food.Recipe
	22, // 28: homeit.FoodService.DeleteRecipe:input_type -> food.RecipeId
	1,  // 29: homeit.FoodService.GetIngredients:input_type -> homeit.UserId
	23, // 30: homeit.FoodService.CreateIngredient:input_type -> food.Ingredient
	24, // 31: homeit.FoodService.DeleteIngredient:input_type -> food.IngredientId
	1,  // 32: homeit.EnergyService.GetTariffs:input_type -> homeit.UserId
	25, // 33: homeit.EnergyService.GetTariff:input_type -> energy.TariffId
	26, // 34: homeit.EnergyService.CreateTariff:input_type -> energy.Tariff
	25, // 35: homeit.EnergyService.DeleteTariff:input_type -> energy.TariffId
	1,  // 36: homeit.EnergyService.GetMeters:input_type -> homeit.UserId
	27, // 37: homeit.EnergyService.GetMeasurements:input_type -> energy.MeterId
	28, // 38: homeit.EnergyService.GetEnergySectors:input_type -> energy.EnergySectorRequest
	29, // 39: homeit.UsersService.CreateToken:output_type -> users.Token
	30, // 40: homeit.UsersService.Login:output_type -> users.Session
	10, // 41: homeit.UsersService.GetUsers:output_type -> users.User
	6,  // 42: homeit.UsersService.GetUser:output_type -> homeit.GetUserResponse
	10, // 43: homeit.UsersService.CreateUser:output_type -> users.User
	4,  // 44: homeit.FilesService.GetFiles:output_type -> homeit.File
	4,  // 45: homeit.FilesService.CreateFile:output_type -> homeit.File
	4,  // 46: homeit.FilesService.DeleteFile:output_type -> homeit.File
	15, // 47: homeit.BillService.GetBills:output_type -> bills.Bill
	15, // 48: homeit.BillService.CreateBill:output_type -> bills.Bill
	15, // 49: homeit.BillService.DeleteBill:output_type -> bills.Bill
	17, // 50: homeit.BillService.GetPayments:output_type -> bills.Payment
	17, // 51: homeit.BillService.GetBillPayments:output_type -> bills.Payment
	17, // 52: homeit.BillService.CreatePayment:output_type -> bills.Payment
	17, // 53: homeit.BillService.DeletePayment:output_type -> bills.Payment
	31, // 54: homeit.BillService.GetSavings:output_type -> bills.Saving
	19, // 55: homeit.FoodService.GetSupplies:output_type -> food.Supply
	19, // 56: homeit.FoodService.CreateSupply:output_type -> food.Supply
	19, // 57: homeit.FoodService.DeleteSupply:output_type -> food.Supply
	12, // 58: homeit.FoodService.GetMenus:output_type -> food.Menu
	12, // 59: homeit.FoodService.CreateMenu:output_type -> food.Menu
	9,  // 60: homeit.FoodService.CopyMenu:output_type -> homeit.CopyMenuResponse
	12, // 61: homeit.FoodService.DeleteMenu:output_type -> food.Menu
	21, // 62: homeit.FoodService.GetRecipes:output_type -> food.Recipe
	21, // 63: homeit.FoodService.CreateRecipe:output_type -> food.Recipe
	21, // 64: homeit.FoodService.DeleteRecipe:output_type -> food.Recipe
	23, // 65: homeit.FoodService.GetIngredients:output_type -> food.Ingredient
	23, // 66: homeit.FoodService.CreateIngredient:output_type -> food.Ingredient
	23, // 67: homeit.FoodService.DeleteIngredient:output_type -> food.Ingredient
	26, // 68: homeit.EnergyService.GetTariffs:output_type -> energy.Tariff
	26, // 69: homeit.EnergyService.GetTariff:output_type -> energy.Tariff
	26, // 70: homeit.EnergyService.CreateTariff:output_type -> energy.Tariff
	26, // 71: homeit.EnergyService.DeleteTariff:output_type -> energy.Tariff
	32, // 72: homeit.EnergyService.GetMeters:output_type -> energy.Meter
	33, // 73: homeit.EnergyService.GetMeasurements:output_type -> energy.Measurement
	34, // 74: homeit.EnergyService.GetEnergySectors:output_type -> energy.EnergySectorResponse
	39, // [39:75] is the sub-list for method output_type
	3,  // [3:39] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_homeit_proto_init() }
func file_homeit_proto_init() {
	if File_homeit_proto != nil {
		return
	}
	file_users_proto_init()
	file_bills_proto_init()
	file_food_proto_init()
	file_energy_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_homeit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_homeit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_homeit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_homeit_proto_goTypes,
		DependencyIndexes: file_homeit_proto_depIdxs,
		MessageInfos:      file_homeit_proto_msgTypes,
	}.Build()
	File_homeit_proto = out.File
	file_homeit_proto_rawDesc = nil
	file_homeit_proto_goTypes = nil
	file_homeit_proto_depIdxs = nil
}
