syntax = "proto3";

package homeit;

option go_package = "github.com/mpiorowski/golang/homeit";
option java_multiple_files = true;
option java_outer_classname = "HomeItProto";
option java_package = "io.grpc.homeit.proto";

import "base.proto";
import "bills.proto";
import "food.proto";
import "energy.proto";

service UsersService {
  rpc CreateToken(base.TokenRequest) returns (base.Token) {}
  rpc Login(base.LoginRequest) returns (base.Session) {}

  rpc CreateUser(stream base.User) returns (stream base.User) {}
  rpc GetUsers(base.Empty) returns (stream base.User) {}
}

service FilesService {
  rpc GetFiles(base.TargetId) returns (stream base.File) {}
  rpc CreateFile(base.File) returns (base.File) {}
  rpc DeleteFile(base.FileId) returns (base.File) {}
}

service BillService {
  rpc GetBills(base.UserId) returns (stream bills.Bill) {}
  rpc CreateBill(bills.Bill) returns (bills.Bill) {}
  rpc DeleteBill(bills.BillId) returns (bills.Bill) {}

  rpc GetPayments(base.UserId) returns (stream bills.Payment) {}
  rpc GetBillPayments(bills.BillId) returns (stream bills.Payment) {}
  rpc CreatePayment(bills.Payment) returns (bills.Payment) {}
  rpc DeletePayment(bills.PaymentId) returns (bills.Payment) {}

  rpc GetSavings(base.UserId) returns (stream bills.Saving) {}
}

service FoodService {
  rpc GetSupplies(base.UserId) returns (stream food.Supply) {}
  rpc CreateSupply(food.Supply) returns (food.Supply) {}
  rpc DeleteSupply(food.SupplyId) returns (food.Supply) {}

  rpc GetMenus(food.MenuRequest) returns (stream food.Menu) {}
  rpc CreateMenu(food.Menu) returns (food.Menu) {}
  rpc CopyMenu(CopyMenuRequest) returns (CopyMenuResponse) {}
  rpc DeleteMenu(food.MenuId) returns (food.Menu) {}

  rpc GetRecipes(base.UserId) returns (stream food.Recipe) {}
  rpc CreateRecipe(food.Recipe) returns (food.Recipe) {}
  rpc DeleteRecipe(food.RecipeId) returns (food.Recipe) {}

  rpc GetIngredients(base.UserId) returns (stream food.Ingredient) {}
  rpc CreateIngredient(food.Ingredient) returns (food.Ingredient) {}
  rpc DeleteIngredient(food.IngredientId) returns (food.Ingredient) {}
}

message CopyMenuRequest {
  food.MenuId menuId = 1;
  repeated string days = 2;
}

message CopyMenuResponse {
  food.Menu menu = 1;
}

service EnergyService {
  rpc GetTariffs(base.UserId) returns (stream energy.Tariff) {}
  rpc GetTariff(energy.TariffId) returns (energy.Tariff) {}
  rpc CreateTariff(energy.Tariff) returns (energy.Tariff) {}
  rpc DeleteTariff(energy.TariffId) returns (energy.Tariff) {}

  rpc GetMeters(base.UserId) returns (stream energy.Meter) {}

  rpc GetMeasurements(energy.MeterId) returns (stream energy.Measurement) {}

  rpc GetEnergySectors(energy.EnergySectorRequest) returns (stream energy.EnergySectorResponse) {}
}
